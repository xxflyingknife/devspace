import React, { useEffect, useRef } from 'react';
import './DropdownMenu.css'; // Create this CSS

function DropdownMenu({ items, onClose, align = 'left' }) {
  const menuRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (menuRef.current && !menuRef.current.contains(event.target)) {
        onClose();
      }
    };
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [onClose]);

  const renderMenuItem = (item, index, isSubMenuContext = false) => {
    if (item.type === 'divider') {
      return <div key={index} className="dropdown-divider"></div>;
    }
    if (item.subMenu) {
        return (
            <li key={index} className="dropdown-item has-submenu">
                <span>{item.label} â€º</span> {/* Right arrow for submenu */}
                <ul className={`dropdown-submenu ${item.alignSubmenu === 'left' ? "opens-left" : ""}`}>
                    {item.subMenu.map((subItem, subIndex) => renderMenuItem(subItem, subIndex, true))}
                </ul>
            </li>
        )
    }
    return (
      <li
        key={index}
        className={`dropdown-item ${item.danger ? 'danger' : ''}`}
        onClick={() => {
          item.onClick();
          // onClose(); // Let individual items decide if menu should close
        }}
      >
        {item.label}
      </li>
    );
  };

  return (
    <div ref={menuRef} className={`dropdown-menu-container ${align}`}>
      <ul className="dropdown-list">
        {items.map(renderMenuItem)}
      </ul>
    </div>
  );
}

export default DropdownMenu;
